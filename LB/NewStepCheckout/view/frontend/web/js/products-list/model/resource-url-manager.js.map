{"version":3,"sources":["../../../ts/js/products-list/model/resource-url-manager.ts"],"names":["ResourceUrlManager","urlBuilder","fetchProducts","getUrl","url","isEmpty","createUrl"],"mappings":";;;MAGqBA,kB;;;AAIjB,kCAAc;AACV,WAAKC,UAAL,GAAkB,iBAAlB;AACH;;;;AAED;;;WAGOC,a,GAAP,yBAA+B;AAC3B,aAAO,KAAKC,MAAL,CAAY,yBAAZ,CAAP;AACH,K;;AAED;;;;WAIQA,M,GAAR,gBAAeC,GAAf,EAAqC;AACjC,UAAI,WAAUC,OAAV,CAAkBD,GAAlB,CAAJ,EAA4B;AACxB,eAAO,uCAAP;AACH;;AACD,aAAO,KAAKH,UAAL,CAAgBK,SAAhB,CAA0BF,GAA1B,CAAP;AACH,K","sourcesContent":["import mageUtils from \"mageUtils\";\nimport UrlBuilder from \"../../utils/url-builder\";\n\nexport default class ResourceUrlManager\n{\n    private urlBuilder: UrlBuilder;\n\n    constructor() {\n        this.urlBuilder = new UrlBuilder();\n    };\n\n    /**\n     * Fetch a url for the rest api\n     */\n    public fetchProducts(): string {\n        return this.getUrl('/checkout/fetchProducts');\n    };\n\n    /**\n     * Return the created url\n     * @param url\n     */\n    private getUrl(url: string): string  {\n        if (mageUtils.isEmpty(url)) {\n            return 'Provided service call does not exist.';\n        }\n        return this.urlBuilder.createUrl(url);\n    }\n\n}\n"],"file":"resource-url-manager.js"}