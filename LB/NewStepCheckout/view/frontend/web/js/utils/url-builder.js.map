{"version":3,"sources":["../../ts/js/utils/url-builder.ts"],"names":["UrlBuilder","method","version","serviceUrl","createUrl","url","bindParams","params","urlParts","split","filter","Boolean","each","key","part","replace","undefined","join","createAddToCartUrl","productId","document","location","protocol","host","getUenc"],"mappings":";;;MAIqBA,U;;;;WAETC,M,GAAiB,M;WACjBC,O,GAAkB,I;WAClBC,U,GAAqB,kB;;;;;AAE7B;;;WAGOC,S,GAAP,mBAAiBC,GAAjB,EAAsC;AAClC,aAAO,KAAKC,UAAL,CAAgB,KAAKH,UAAL,GAAkBE,GAAlC,CAAP;AACH;AAED;;;;;;;WAKQC,U,GAAR,oBAAmBD,GAAnB,EAAwC;AACpC,UAAIE,MAAsB,GAAG;AACzBN,QAAAA,MAAM,EAAE,KAAKA,MADY;AAEzBC,QAAAA,OAAO,EAAE,KAAKA;AAFW,OAA7B;AAIA,UAAIM,QAAJ;AAEAD,MAAAA,MAAM,CAACN,MAAP,GAAgB,KAAKA,MAArB;AACAM,MAAAA,MAAM,CAACL,OAAP,GAAiB,KAAKA,OAAtB;AAEAM,MAAAA,QAAQ,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAX;AACAD,MAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgBC,OAAhB,CAAX;;AAEA,cAAEC,IAAF,CAAOJ,QAAP,EAAiB,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AAClCA,QAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;;AAEA,YAAIR,MAAM,CAACO,IAAD,CAAN,KAAiBE,SAArB,EAAgC;AAC5BR,UAAAA,QAAQ,CAACK,GAAD,CAAR,GAAgBN,MAAM,CAACO,IAAD,CAAtB;AACH;AACJ,OAND;;AAQA,aAAON,QAAQ,CAACS,IAAT,CAAc,GAAd,CAAP;AACH;AAED;;;;;;;eAKOC,kB,GAAP,4BAA0BC,SAA1B,EAA6C;AACzC,aAAUC,QAAQ,CAACC,QAAT,CAAkBC,QAA5B,UAAyCF,QAAQ,CAACC,QAAT,CAAkBE,IAA3D,gCAA0F,gBAAeC,OAAf,EAA1F,iBAA8HL,SAA9H;AACH,K","sourcesContent":["import $ from \"jquery\";\nimport ParamInterface from \"../types/param.types\";\nimport CheckoutConfig from \"./checkout-config\";\n\nexport default class UrlBuilder\n{\n    private method: string = 'rest';\n    private version: string = 'V1';\n    private serviceUrl: string = ':method/:version';\n\n    /**\n     * @inheritdoc\n     */\n    public createUrl(url: string): string {\n        return this.bindParams(this.serviceUrl + url);\n    }\n\n    /**\n     * Bind params for the url\n     *\n     * @param url\n     */\n    private bindParams(url: string): string {\n        let params: ParamInterface = {\n            method: this.method,\n            version: this.version,\n        };\n        let urlParts;\n\n        params.method = this.method;\n        params.version = this.version;\n\n        urlParts = url.split('/');\n        urlParts = urlParts.filter(Boolean);\n\n        $.each(urlParts, function (key, part) {\n            part = part.replace(':', '');\n\n            if (params[part] !== undefined) {\n                urlParts[key] = params[part];\n            }\n        });\n\n        return urlParts.join('/');\n    }\n\n    /**\n     * Build a add to card url\n     * @param productId\n     * @param uenc\n     */\n    static createAddToCartUrl(productId: number) {\n        return `${document.location.protocol}//${document.location.host}/checkout/cart/add/uenc/${CheckoutConfig.getUenc()}/product/${productId}`;\n    }\n}\n"],"file":"url-builder.js"}